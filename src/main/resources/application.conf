pekko {
  log-config-on-start = off
  stdout-loglevel = "INFO"
  loglevel = "INFO"
  loggers = ["org.apache.pekko.event.slf4j.Slf4jLogger"]
  logging-filter = "org.apache.pekko.event.slf4j.Slf4jLoggingFilter"
  log-dead-letters = on
  log-dead-letters-during-shutdown = off
  actor {
    provider = "cluster"
  }
  remote {
    netty.tcp {
      hostname = "127.0.0.1"
      port = 0 # port set in ActorSystem class
    }
  }
  remote.artery {
    canonical {
      hostname = "127.0.0.1"
      port = 0 # port set in ActorSystem class
    }
  }

  cluster {
    seed-nodes = [
      "pekko://cluster@127.0.0.1:25000",
      "pekko://cluster@127.0.0.1:25001"]
    jmx.enabled = on
    jmx.multi-mbeans-in-same-jvm = on

    split-brain-resolver {
      # Select one of the available strategies (see descriptions below):
      # static-quorum, keep-majority, keep-oldest, down-all, lease-majority
      active-strategy = keep-majority

      #//#stable-after
      # Time margin after which shards or singletons that belonged to a downed/removed
      # partition are created in surviving partition. The purpose of this margin is that
      # in case of a network partition the persistent actors in the non-surviving partitions
      # must be stopped before corresponding persistent actors are started somewhere else.
      # This is useful if you implement downing strategies that handle network partitions,
      # e.g. by keeping the larger side of the partition and shutting down the smaller side.
      # Decision is taken by the strategy when there has been no membership or
      # reachability changes for this duration, i.e. the cluster state is stable.
      stable-after = 20s
      #//#stable-after

      # When reachability observations by the failure detector are changed the SBR decisions
      # are deferred until there are no changes within the 'stable-after' duration.
      # If this continues for too long it might be an indication of an unstable system/network
      # and it could result in delayed or conflicting decisions on separate sides of a network
      # partition.
      # As a precaution for that scenario all nodes are downed if no decision is made within
      # `stable-after + down-all-when-unstable` from the first unreachability event.
      # The measurement is reset if all unreachable have been healed, downed or removed, or
      # if there are no changes within `stable-after * 2`.
      # The value can be on, off, or a duration.
      # By default it is 'on' and then it is derived to be 3/4 of stable-after, but not less than
      # 4 seconds.
      down-all-when-unstable = on

    }
  }

  management {
    http {
      hostname = "localhost"
      port = 8558
      port = ${pekko.management.http.port}
    }
  }

  actor {
    allow-java-serialization = on

    serialization-bindings { }
  }
}
pekko.cluster.metrics.native-library-extract-folder = ${user.dir}/target/native
pekko.cluster.jmx.multi-mbeans-in-same-jvm = on
